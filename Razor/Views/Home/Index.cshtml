@{
    ViewData["Title"] = "Home Page";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

    <!--1. Dichiarare una variabile valorizzandola con il nostro nome.
Dichiarare un'altra variabile valorizzandola con il nostro cognome.
Stampare il nostro nome e cognome all'interno di un tag h2.-->

    @{
        string nome = "Pasquale";
        string cognome = "Angelino Daniele";

    }

    <h2>@nome @cognome</h2>



  <!--2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n
 (con n passato come parametro - n incluso)
Stampare dentro uno span il risultato.-->

    @{
        int SommaNumeri(int n)
        {
            int somma = n * (n + 1) / 2;
            return somma;
        }
    }

    @{
        int risultato = SommaNumeri(5);
    }

    <span> La somma dei numeri naturali fino a n è: @risultato</span>

 <!--3. Contare quante volte la lettera a è presente nalla frase
 "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina -->


    @{
        string stringa = "nel mezzo del cammin di nostra vita";
        int count = stringa.Split("a").Length - 1;
    }
    <p> @count </p>

    <!-- 4. Creare una List<int> di 20 numeri interi 
        (generati random da 1 a 90, 1 e 90 inclusi)
        e mostrare in pagina solo i numeri compresi tra 20 e 70-->
    

    @{
        List<int> numeriInteri = new List<int>();
        Random random = new Random();
        for(int i = 0; i < 20; i++)
        {
            int numeroRandom = random.Next(1, 91);
            numeriInteri.Add(numeroRandom);
        }

        foreach(int numero in numeriInteri)
        {
            if(numero > 20 && numero < 70)
            {
                <p>@numero</p>
            }

        }

     }


    <!--5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime)
        con il formato anno-mese-giorno ore:minuti:secondi-->

        @{
            var dataOraAttuale = DateTime.Now;
        }

        <p>@dataOraAttuale.Year/@dataOraAttuale.Month/@dataOraAttuale.Day
            @dataOraAttuale.Hour:@dataOraAttuale.Minute:@dataOraAttuale.Second
        </p>

<!--6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
a. la data di 7 giorni fa
b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma 
tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)-->


    @{
        DateTime dataDiOggi = DateTime.Now;
        DateTime dataDi7GiorniFa = dataDiOggi.AddDays(-7);
        DayOfWeek giorno = dataDiOggi.DayOfWeek;
        DateTime dataTraUnAnno = dataDiOggi.AddYears(1);
        DayOfWeek giornoTraUnAnno = dataTraUnAnno.DayOfWeek;
    }


    <p> data di oggi @dataDiOggi</p>
    <p>data di 7 giorni fa @dataDi7GiorniFa</p>
    <p>giorno della settimana @giorno</p>
    <p>Tra un anno il giorno della settimana sarà: @giornoTraUnAnno</p>





</body>
</html>